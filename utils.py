import datetime
import random
import dbworker
import markups
import messages
from enum import Enum


# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä–æ–∫—É –Ω–∞ –¥–∞—Ç—É
def validate_date(date_text):
    try:
        if date_text != datetime.datetime.strptime(date_text, "%d.%m.%Y").strftime("%d.%m.%Y"):
            raise ValueError
        return True
    except ValueError:
        return False


# –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –≤ –¥–∞—Ç—É
def convert_date(date_text):
    return datetime.datetime.strptime(date_text, "%d.%m.%Y")


# –î–∞—Ä–∏–º –ø–æ–¥–∞—Ä–æ–∫ —é–∑–µ—Ä—É
def gift_giving(bd, bot, id_user, id_event):
    test = bd.getDescriptGiftEventsById(id_event)  # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫
    new_list = []
    for i in test:
        if i['cnt'] > 0:  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª-–≤–æ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø–æ–¥–∞—Ä–∫–æ–≤
            new_list.append(i)  # –î–æ–±–∞–≤–ª—è–µ–º —ç—Ç–∏ –ø–æ–¥–∞—Ä–∫–∏ –≤ –Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫
    if len(new_list) == 0:
        bot.send_message(id_user, messages.s_gift_end)  # –ü–æ–¥–∞—Ä–∫–∏ –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å
    else:
        gift = random.choice(new_list)  # –í—ã–±–∏—Ä–∞–µ–º —Ä–∞–Ω–¥–æ–º–æ–º –ø–æ–¥–∞—Ä–æ–∫
        bd.addGiftByUserIdEventGift(id_user, gift['id_event_gift'])  # –î–∞—Ä–∏–º –ø–æ–¥–∞—Ä–æ–∫
        bd.changeCountGiftByIdGift(gift['id_gift'])  # –£–º–µ–Ω—å—à–∞–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–∞—Ä–∫–æ–≤ –≤ –±–∞–∑–µ

        # bot.send_message(id_user, messages.s_gift + gift['name'] + " (" +
        #                  gift['descript'] + ")", reply_markup=markups.keyboardMain)

        bot.send_message(id_user, f'{messages.s_gift}{gift["name"]}\n{gift["descript"]}üòä\n{messages.s_gifts_addr}',
                         reply_markup=markups.keyboardMain)
        bot.send_photo(
            id_user,
            (open(f'/home/ubuntu/bots/kidsReferal/env/APBot2test/media/{gift["img"]}', 'rb')),
            reply_markup=markups.keyboardMain)


# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è
def check_birthday(bd, bot, current_date):
    test = bd.getUserByDtBirth(current_date)
    if len(test) != 0:
        for i in test:
            gift_giving(bd, bot, i['id_user'], 4)


# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø–æ–¥–∞—Ä–∫–æ–≤ —é–∑–µ—Ä–∞
# def get_users_gifts(bd, user_id):
#     spisok = bd.getGiftByIdUser(user_id)
#     stroka = ''
#     try:
#         for i in spisok:
#             stroka += "–ù–∞–∑–≤–∞–Ω–∏–µ: " + i['name'] + ". –°—Ç–∞—Ç—É—Å: " + i['status'] + "\n"
#         return stroka
#     except TypeError:
#         return messages.s_error
# –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫
def get_users_gifts(bd, user_id):
    try:
        return bd.getGiftByIdUser(user_id)
    except TypeError:
        return messages.s_error


# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —é–∑–µ—Ä–∞
def validate_state(bd, message):
    user_id = message.chat.id
    text = message.text
    state = dbworker.get_current_state(user_id)
    s = " "
    markup = markups.hide_markup
    if state == States.S_ENTER_NAME.value:
        s = messages.s_name_remind
    elif state == States.S_PHONE.value:
        s = messages.s_phone_remind
        markup = markups.keyboardPhone
    elif state == States.S_BIRTHDAY.value:
        s = messages.s_birth_remind
    elif state == States.S_MENU.value:
        s = messages.s_menu
        markup = markups.keyboardMain
    else:  # —Å–æ—Å—Ç–æ—è–Ω–∏–µ "0" - –Ω–∞—á–∞–ª–æ –¥–∏–∞–ª–æ–≥–∞
        s = messages.s_hello
        dbworker.set_state(user_id, States.S_ENTER_NAME.value)
        if len(text) > 6:
            bd.addUser(user_id, text[7:])
        else:
            bd.addUser(user_id, user_id)
    return [s, markup]


# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —é–∑–µ—Ä–∞2
def validate_state2(user_id, states):
    state_user = dbworker.get_current_state(user_id)
    if state_user == states:
        return True
    else:
        return False


# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ—Ñ–µ—Ä–∞–ª–∞
def validate_ref(bd, bot, user_id):
    id_invite = int(bd.getid_invite(user_id)[0]['id_invite'])
    if id_invite != user_id:
        gift_giving(bd, bot, user_id, 3)
        gift_giving(bd, bot, id_invite, 2)
    else:
        gift_giving(bd, bot, user_id, 1)


# –í–æ–∑–º–æ–∂–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class States(Enum):

    S_START = "0"  # –ù–∞—á–∞–ª–æ –Ω–æ–≤–æ–≥–æ –¥–∏–∞–ª–æ–≥–∞
    S_ENTER_NAME = "1"  # –í–≤–æ–¥ –∏–º–µ–Ω–∏
    S_PHONE = "2"  # –í–≤–æ–¥ —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    S_BIRTHDAY = "3"  # –í–≤–æ–¥ –¥–∞—Ç—ã —Ä–æ–∂–¥–µ–Ω–∏—è
    S_MENU = "4"  # –û—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é
